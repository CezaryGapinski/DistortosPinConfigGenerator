{% include template_dir + "/header_cpp_file.jinja" %}

#include "distortos/board/leds.hpp"

#ifdef CONFIG_BOARD_LEDS_ENABLE

#include "distortos/chip/ChipOutputPin.hpp"

namespace distortos
{

namespace board
{

/*---------------------------------------------------------------------------------------------------------------------+
| global objects
+---------------------------------------------------------------------------------------------------------------------*/

chip::ChipOutputPin leds[totalLeds]
{ {% for item in leds_pins %} 
	/// configuration for led {% filter upper %}{{leds_ids[loop.index - 1][0]}}{% endfilter %}
	chip::ChipOutputPin{ chip::Pin::{{item["pin"]}},
	{% filter lower %}{{item["openDrain"]}}{% endfilter %},
	chip::PinOutputSpeed::{{item["pinOutputSpeed"]}},
	chip::PinPull::{{item["pinPull"]}},
	{% filter lower %}{{item["initialState"]}}{% endfilter %},
	{% filter lower %}{{item["inverted"]}}{% endfilter %} },
{% endfor %} 
};

}	// namespace board

}	// namespace distortos

#endif	// def CONFIG_BOARD_LEDS_ENABLE
{{''}}
