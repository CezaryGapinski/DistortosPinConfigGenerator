{% include 'templates/header.jinja' %}

#include "distortos/board/spi.hpp"

#ifdef CONFIG_BOARD_SPIS_ENABLE

#include "distortos/chip/ChipOutputPin.hpp"
#include "distortos/chip/ChipAlternativePin.hpp"
#include "distortos/board/STM32-SPI-Pins.hpp"

namespace distortos
{

namespace board
{

/*---------------------------------------------------------------------------------------------------------------------+
| global objects
+---------------------------------------------------------------------------------------------------------------------*/
{% for item in spi_pins_list %}
distortos::chip::ChipAlternativePin {{item.clk["id"]}} { chip::Pin::{{item.clk["pin"]}},
	{% filter lower %}{{item.clk["openDrain"]}}{% endfilter %},
	chip::PinOutputSpeed::{{item.clk["pinOutputSpeed"]}},
	chip::PinPull::{{item.clk["pinPull"]}},
	chip::PinAlternateFunction::{{item.clk["alternateFunction"]}}
};

distortos::chip::ChipAlternativePin {{item.miso["id"]}} { chip::Pin::{{item.miso["pin"]}},
	{% filter lower %}{{item.miso["openDrain"]}}{% endfilter %},
	chip::PinOutputSpeed::{{item.miso["pinOutputSpeed"]}},
	chip::PinPull::{{item.miso["pinPull"]}},
	chip::PinAlternateFunction::{{item.miso["alternateFunction"]}}
};
distortos::chip::ChipAlternativePin {{item.mosi["id"]}} { chip::Pin::{{item.mosi["pin"]}},
	{% filter lower %}{{item.mosi["openDrain"]}}{% endfilter %},
	chip::PinOutputSpeed::{{item.mosi["pinOutputSpeed"]}},
	chip::PinPull::{{item.mosi["pinPull"]}},
	chip::PinAlternateFunction::{{item.mosi["alternateFunction"]}}
};
distortos::chip::ChipOutputPin {{item.cs["id"]}} { chip::Pin::{{item.cs["pin"]}},
	{% filter lower %}{{item.cs["openDrain"]}}{% endfilter %},
	chip::PinOutputSpeed::{{item.cs["pinOutputSpeed"]}},
	chip::PinPull::{{item.cs["pinPull"]}},
	{% filter lower %}{{item.cs["initialState"]}}{% endfilter %}
};

distortos::board::SpiPins {{item.id}}({{item.clk["id"]}}, {{item.miso["id"]}}, {{item.mosi["id"]}}, {{item.cs["id"]}});
{% endfor %}

}	// namespace board

}	// namespace distortos

#endif	// def CONFIG_BOARD_SPIS_ENABLE
