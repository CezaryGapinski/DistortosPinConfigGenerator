{% include 'templates/header.jinja' %}

#ifndef SOURCE_BOARD_STM32_{{ board }}_INCLUDE_DISTORTOS_BOARD_BUTTONS_HPP_
#define SOURCE_BOARD_STM32_{{ board }}_INCLUDE_DISTORTOS_BOARD_BUTTONS_HPP_

#include "distortos/chip/STM32-GPIO{{ gpio_version }}.hpp"

#include <array>

namespace distortos
{

#ifdef CONFIG_BOARD_BUTTONS_ENABLE

namespace chip
{

class ChipInputPin;

}	// namespace chip

#endif	// def CONFIG_BOARD_BUTTONS_ENABLE

namespace board
{

/// total number of LEDs on the board
constexpr size_t totalButtons { {{ buttons_number }} };

/*---------------------------------------------------------------------------------------------------------------------+
| button indexes
+---------------------------------------------------------------------------------------------------------------------*/

{% for item in buttons_ids %}
/// index of {{item}}
constexpr size_t {{ item }} { {{loop.index - 1}} };
{% endfor %}

#ifdef CONFIG_BOARD_BUTTONS_ENABLE

/*---------------------------------------------------------------------------------------------------------------------+
| indexed access to button objects
+---------------------------------------------------------------------------------------------------------------------*/

/// array with all button objects
extern const chip::ChipInputPin buttons[totalButtons];

#endif	// def CONFIG_BOARD_BUTTONS_ENABLE

}	// namespace board

}	// namespace distortos

#endif	// SOURCE_BOARD_STM32_STM32L0_NUCLEO_L073RZ_INCLUDE_DISTORTOS_BOARD_BUTTONS_HPP_
